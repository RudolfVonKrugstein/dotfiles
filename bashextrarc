# set the editor to helix
export EDITOR="nvim"

# load github tokens
if [ -f ~/.gitlab_token ]; then
    export GITLAB_TOKEN=$(cat ~/.gitlab_token)
fi
if [ -f ~/.gitlab_wc_token ]; then
    export GITLAB_WC_TOKEN=$(cat ~/.gitlab_wc_token)
fi
if [ -f ~/.github_token ]; then
    export GITHUB_TOKEN=$(cat ~/.github_token)
fi

# flutter
if [ -d ~/development/flutter/bin ]; then
    export PATH=$PATH:$HOME/development/flutter/bin
fi

# go
if [ -d /usr/local/go/bin ]; then
    export PATH=$PATH:/usr/local/go/bin
fi
if [ -d ~/go/bin ]; then
    export PATH=$PATH:~/go/bin
fi

# cargo
if [ -d ~/.cargo/bin ]; then
    export PATH=$PATH:~/.cargo/bin
fi

# android sdk
if [ -d ~/development/AndroidSDK/cmdline-tools/latest/bin ]; then
    export PATH=$PATH:$HOME/development/AndroidSDK/cmdline-tools/latest/bin
fi
if [ -d ~/development/AndroidSDK/emulator ]; then
    export PATH=$PATH:$HOME/development/AndroidSDK/emulator
fi
if [ -d ~/development/AndroidSDK/platform-tools ]; then
    export PATH=$PATH:$HOME/development/AndroidSDK/platform-tools
fi

# chrome deptool
if [ -d ~/development/depot_tools ]; then
    export PATH=$PATH:$HOME/development/depot_tools
fi

export GIT_WORKSPACE="~/projects"

# tmux session manager
# ~/.tmux/plugins
export PATH=$HOME/.tmux/plugins/t-smart-tmux-session-manager/bin:$PATH
# ~/.config/tmux/plugins
export PATH=$HOME/.config/tmux/plugins/t-smart-tmux-session-manager/bin:$PATH

export PATH=$HOME/go/bin:$PATH
export PATH=$HOME/.local/bin:$PATH

# fzf
if [ -d ~/.fzf/bin ]; then
  export PATH=$PATH:~/.fzf/bin
fi

# add ssh keys
if [ -z "$SSH_AUTH_SOCK" ] ; then
  eval `ssh-agent -s`
fi

if grep -qi microsoft /proc/version; then
  echo "Not using gpg agent on WSL"
  export GPG_TTY=$(tty)
else
  export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
fi


export FZF_TMUX_OPTS="--bind 'tab:up' --bind 'shift-tab:down'"
export FZF_CTRL_T_OPTS="--bind 'tab:up' --bind 'shift-tab:down'"
export FZF_CTRL_R_OPTS="--bind 'tab:up' --bind 'shift-tab:down'"
export FZF_ALT_C_OPTS="--bind 'tab:up' --bind 'shift-tab:down'"

if [[ ! -z "$ZSH_VERSION" ]]; then
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
else
  [ -f ~/.fzf.bash ] && source ~/.fzf.bash
fi

# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# start zellij
#if [[ -z "$ZELLIJ" ]]; then
#    if [[ "$ZELLIJ_AUTO_ATTACH" == "true" ]]; then
#        zellij attach -c
#    else
#        zellij
#    fi
#
#    if [[ "$ZELLIJ_AUTO_EXIT" == "true" ]]; then
#        exit
#    fi
#fi

# doom emacs
[ -d ~/.config/emacs/bin ] && export PATH="$PATH:$HOME/.config/emacs/bin"

# ocaml
eval $(opam env)

# enable startship
[[ ! -z "$ZSH_VERSION" ]] && eval "$(starship init zsh)" || eval "$(starship init bash)"

# configure zoxide
[[ ! -z "$ZSH_VERSION" ]] && eval "$(zoxide init zsh)" || eval "$(zoxide init bash)"

# aliases
alias ll="exa -l -g --icons --git"
alias llt="exa -1 --icons --tree --git-ignore"


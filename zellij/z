#!/usr/bin/env bash
if [ "$(command -v zellij)" = "" ]; then
	echo "Zellij is not installed"
	exit 1
fi

LAST_SESSION="$(cat /tmp/zellij_last_session || echo -n '')"

home_replacer() {
	HOME_REPLACER=""                                          # default to a noop
	echo "$HOME" | grep -E "^[a-zA-Z0-9\-_/.@]+$" &>/dev/null # chars safe to use in sed
	HOME_SED_SAFE=$?
	if [ $HOME_SED_SAFE -eq 0 ]; then # $HOME should be safe to use in sed
		HOME_REPLACER="s|^$HOME/|~/|"
	fi
	echo "$HOME_REPLACER"
}

transform_home_path() {
	HOME_SED_SAFE=$?
	if [ $HOME_SED_SAFE -eq 0 ]; then
		echo "$1" | sed -e "s|^~/|$HOME/|"
	else
		echo "$1"
	fi
}

fzf_window() {
	fzf --reverse --no-sort --border "rounded" --info inline --pointer "â†’" --prompt "Session > " --header "Select session" --preview "bash -c \"echo {2} | grep -q 'Session' && echo {} || ls {3}\""
}

set_last_session() {
	echo "$1" >/tmp/zellij_last_session
}

last_session() {
	if [[ -n "$LAST_SESSION" ]]; then
		echo $LAST_SESSION | awk '{ print "("NR")\t[Session]\t"$1 }'
	fi
}

sessions_list() {
	if [[ -n "$LAST_SESSION" ]]; then
		zellij list-sessions -s | grep -v "$(echo $LAST_SESSION)" | awk '{ print "("NR")\t[Session]\t"$1 }'
	else
		zellij list-sessions -s | awk '{ print "("NR")\t[Session]\t"$1 }'
	fi
}

project_list() {
	list=$(find ~/projects -type d -execdir test -d {}/.git \; -print -prune)
	list="$(realpath ~/dotfiles) ${list}"
	echo $list | tr --truncate-set1 " /" "\n" | awk '{ print "("NR")\t[Directory]\t"$1 }'
}

select_project() {
	project_dir=$({
		last_session
		sessions_list
		project_list
	} | fzf_window)
	if [ "$project_dir" = "" ]; then
		exit
	fi
	echo "$project_dir"
}

get_sanitized_selected() {
	echo "$1" | sed "s/^([0-9]*)\t\[[^]]*\]\t//"
}

get_session_name() {
	project_dir=$1
	directory=$(basename "$project_dir")
	session_name=$(echo "$directory" | tr ' .:' '_')
	echo "$session_name"
}

if [[ -n "$1" ]]; then
	selected=$(realpath $1)
else
	selected=$(select_project)
fi

if [ -z "$selected" ]; then
	exit 0
fi

cwd=$(get_sanitized_selected "$selected")
session_name=$(get_session_name "$(transform_home_path "$cwd")")
session=$(zellij list-sessions | grep "$session_name")
current_session=$(zellij list-sessions -n | grep '(current)' | grep -o '^[^ ]*')
is_current_session=$(zellij list-sessions -n | grep "^$session_name \[Created" | grep "(current)")

set_last_session "$current_session"

# If we're inside of zellij, detach
if [[ -n "$ZELLIJ" ]]; then
	if [[ -z "$is_current_session" ]]; then
		echo "Switching session from inside zellij"
		zellij pipe --plugin file:$HOME/.config/zellij/plugins/zellij-switch.wasm -- "--session=$session_name --cwd=$cwd"
	fi
else
	if [[ -n "$session" ]]; then
		echo "Existing session, switching to it"
		zellij attach $session_name -c
	else
		echo "New session, creating it"
		zellij attach $session_name -c options --default-cwd $cwd
	fi
fi
